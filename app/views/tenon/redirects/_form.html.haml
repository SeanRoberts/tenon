- content_for :sidebar do
  .sidebar
    .content
      %h2= t('tenon.redirects.redirects')
      = link_to t('tenon.redirects.new_redirect'), new_redirect_path, class: 'btn btn-block btn-primary'

= autosaving_form_for @redirect do |f|
  .flash.flash-alert{ style: 'padding-right: 40px;' }
    %i.fa.fa-exclamation-triangle
    = t('tenon.redirects.redirects_will_be_run')

  = error_messages_for :redirect
  .fields.large.tabs
    .tab-pane.active#details
      .form-group
        = f.text_field :in, label: t('tenon.redirects.route_to_match'), explanation: t('tenon.redirects.string_can_be_written'), placeholder: '\/old-path\/(\d+)-(\.*)'
      .form-group
        = f.text_field :out, label: t('tenon.redirects.destination'), explanation: t('tenon.redirects.zero_indexed_captures'), placeholder: '/new-path/{0}-{1}'

  .fields.small
    %h4.box-label= t('tenon.common.details')
    .box
      .form-group.bordered.inline
        = f.check_box :active, class: 'tn-checkbox-right'
        = f.super_label :active

    %h4.box-label= t('tenon.common.actions')
    .box
      .content
        - if can?(:publish, @redirect)
          %button.btn.btn-block.btn-comp{ data: { disable_with: t('tenon.common.please_wait') } }= t('tenon.common.save')
        - if can?(:create, Tenon::ItemVersion)
          = save_draft_button(@redirect)
          .last-autosave

      %hr
      .content
        = clear_draft_link if params[:version]
        = load_draft_link(@redirect)
        - if @redirect.persisted?
          = link_to t('tenon.common.delete'), @redirect, data: { method: :delete, confirm: t('tenon.common.are_you_sure') }, :class => 'delete-link'
    .spacer
